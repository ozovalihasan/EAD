// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ConnectionLine /> if association type is "through" renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg>
        <g>
          <path
            class="animated"
            d="M10,20 C10,96.25 534,96.25 534,172.5"
            fill="none"
            stroke="#222"
            stroke-width="1.5"
          />
          <path
            class="animated"
            d="M534,172.5 C534,316.38580541526676 30,-103.88580541526673 30,40"
            fill="none"
            stroke="#222"
            stroke-width="1.5"
          />
          <circle
            cx="30"
            cy="40"
            fill="#fff"
            r="3"
            stroke="#222"
            stroke-width="1.5"
          />
        </g>
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg>
      <g>
        <path
          class="animated"
          d="M10,20 C10,96.25 534,96.25 534,172.5"
          fill="none"
          stroke="#222"
          stroke-width="1.5"
        />
        <path
          class="animated"
          d="M534,172.5 C534,316.38580541526676 30,-103.88580541526673 30,40"
          fill="none"
          stroke="#222"
          stroke-width="1.5"
        />
        <circle
          cx="30"
          cy="40"
          fill="#fff"
          r="3"
          stroke="#222"
          stroke-width="1.5"
        />
      </g>
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<ConnectionLine /> if association type is"not "through" renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg>
        <g>
          <path
            class=""
            d="M10,20 C10,30 30,30 30,40"
            fill="none"
            stroke="#222"
            stroke-width="1.5"
          />
          <circle
            cx="30"
            cy="40"
            fill="#fff"
            r="3"
            stroke="#222"
            stroke-width="1.5"
          />
        </g>
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg>
      <g>
        <path
          class=""
          d="M10,20 C10,30 30,30 30,40"
          fill="none"
          stroke="#222"
          stroke-width="1.5"
        />
        <circle
          cx="30"
          cy="40"
          fill="#fff"
          r="3"
          stroke="#222"
          stroke-width="1.5"
        />
      </g>
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
